//VICTOR EHITI ITIMURA TAMAY 2485561

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projetop;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 *
 * @author Victor
 */
public class IntPaciente extends javax.swing.JFrame {
    private static IntPaciente intPacUnic;
    
    
    
    /**
     * Creates new form IntPaciente
     */
    public IntPaciente() {
        initComponents();
    }

    public static IntPaciente getIntPaciente(){
        
        if(intPacUnic == null){
            intPacUnic = new IntPaciente();
        }
        return intPacUnic;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rotMenuPac = new javax.swing.JLabel();
        rotId = new javax.swing.JLabel();
        cxId = new javax.swing.JTextField();
        btConsPac = new javax.swing.JButton();
        btAltPac = new javax.swing.JButton();
        btDelPac = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btnAtualizarTabela = new javax.swing.JButton();
        btnCadPac = new javax.swing.JButton();
        bmPac = new javax.swing.JMenuBar();
        mnPac = new javax.swing.JMenu();
        mnCadPac = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        rotMenuPac.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        rotMenuPac.setText("MENU PACIENTE");

        rotId.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        rotId.setText("ID:");

        btConsPac.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btConsPac.setText("CONSULTA PACIENTE");
        btConsPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsPacActionPerformed(evt);
            }
        });

        btAltPac.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btAltPac.setText("ALTERA RESTRICOES");
        btAltPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAltPacActionPerformed(evt);
            }
        });

        btDelPac.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btDelPac.setText("DELETAR PACIENTE");
        btDelPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDelPacActionPerformed(evt);
            }
        });

        btSair.setText("SAIR");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btnAtualizarTabela.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnAtualizarTabela.setText("APRESENTAR PACIENTES");
        btnAtualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarTabelaActionPerformed(evt);
            }
        });

        btnCadPac.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnCadPac.setText("Cadastrar Paciente");
        btnCadPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadPacActionPerformed(evt);
            }
        });

        mnPac.setText("Paciente");

        mnCadPac.setText("CADASTRO DE PACIENTE");
        mnCadPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnCadPacActionPerformed(evt);
            }
        });
        mnPac.add(mnCadPac);

        bmPac.add(mnPac);

        setJMenuBar(bmPac);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btSair))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btConsPac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCadPac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btDelPac)
                            .addComponent(btAltPac))))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(rotId)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cxId))
                        .addComponent(rotMenuPac))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnAtualizarTabela)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rotMenuPac)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotId)
                    .addComponent(cxId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(btnAtualizarTabela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAltPac)
                    .addComponent(btConsPac, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCadPac)
                    .addComponent(btDelPac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(btSair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btConsPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsPacActionPerformed
        consPac();
        limpar();
    }//GEN-LAST:event_btConsPacActionPerformed

    private void btAltPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAltPacActionPerformed
        altPac();
        limpar();
    }//GEN-LAST:event_btAltPacActionPerformed

    private void btDelPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDelPacActionPerformed
        delPac();
        limpar();
    }//GEN-LAST:event_btDelPacActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed

    private void mnCadPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnCadPacActionPerformed
        CadPac.getCadPac().setVisible(true);
    }//GEN-LAST:event_mnCadPacActionPerformed

    private void btnAtualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarTabelaActionPerformed
        ImpPac telaDeListagem = ImpPac.getImpPac();
    
        // 2. Torna a tela visível
        telaDeListagem.setVisible(true);

        // 3. CHAMA O MÉTODO PÚBLICO DAQUELA TELA PARA CARREGAR OS DADOS!
        telaDeListagem.atualizarTabela(); 
    }//GEN-LAST:event_btnAtualizarTabelaActionPerformed

    private void btnCadPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadPacActionPerformed
        CadPac telaDeCadastro = new CadPac();
    
        // Torna a tela visível para o usuário
        telaDeCadastro.setVisible(true);

        // Opcional: centralizar a nova janela
        telaDeCadastro.setLocationRelativeTo(null); 
    }//GEN-LAST:event_btnCadPacActionPerformed

    public void delPac(){
        try {
            // 1. Pega o ID da caixa de texto
            int idParaDeletar = Integer.parseInt(cxId.getText());

            // 2. Cria uma instância do nosso novo DAO
            PacienteDAO pacienteDAO = new PacienteDAO();

            // 3. Chama o método deletar do DAO
            boolean sucesso = pacienteDAO.deletar(idParaDeletar);

            // 4. Mostra a mensagem com base no resultado
            if(sucesso){
                JOptionPane.showMessageDialog(null, "PACIENTE DELETADO COM SUCESSO!", "DELETA PACIENTE", 1);
            } else {
                JOptionPane.showMessageDialog(null, "PACIENTE NÃO ENCONTRADO (ID: " + idParaDeletar + ")", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            // Erro se o usuário não digitou um número válido
            JOptionPane.showMessageDialog(null, "Por favor, digite um ID válido.", "ERRO DE ENTRADA", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            // Captura outros erros, como falha de conexão com o banco
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "ERRO GERAL", JOptionPane.ERROR_MESSAGE);
        }
        limpar();
    }

    public void consPac(){
        try {
            // 1. Pega o ID da caixa de texto
            int idParaConsultar = Integer.parseInt(cxId.getText());

            // 2. Cria uma instância do nosso novo DAO
            PacienteDAO pacienteDAO = new PacienteDAO();

            // 3. Chama o método de busca do DAO
            Paciente pacienteEncontrado = pacienteDAO.buscarPorId(idParaConsultar);

            // 4. Mostra os dados se o paciente foi encontrado
            if(pacienteEncontrado != null){
                // Monta a mensagem para exibição
                String mensagem = "DADOS DO PACIENTE:\n" +
                                  "---------------------------\n" +
                                  " - ID: " + pacienteEncontrado.getId() + "\n" +
                                  " - NOME: " + pacienteEncontrado.getNome() + "\n" +
                                  " - CPF: " + pacienteEncontrado.getCpf() + "\n" +
                                  " - IDADE: " + pacienteEncontrado.getIdade() + "\n" +
                                  " - ANO DE NASCIMENTO: " + pacienteEncontrado.calcular() + "\n";

                if (pacienteEncontrado.getDoenca() != null) {
                    mensagem += " - DOENÇA: " + pacienteEncontrado.getDoenca().getTipo() + "\n" +
                                " - SINTOMAS: " + pacienteEncontrado.getDoenca().getSint() + "\n" +
                                " - RESTRIÇÕES: " + pacienteEncontrado.getDoenca().getRestr() + "\n";
                } else {
                    mensagem += " - DOENÇA: Nenhuma cadastrada.\n";
                }

                JOptionPane.showMessageDialog(null, mensagem, "CONSULTA PACIENTE", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "PACIENTE NÃO CADASTRADO (ID: " + idParaConsultar + ")", "NÃO ENCONTRADO", 1);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, digite um ID válido.", "ERRO DE ENTRADA", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "ERRO GERAL", JOptionPane.ERROR_MESSAGE);
        }
        limpar();
    }

    public void altPac(){
        try {
            // 1. Pega o ID do paciente da caixa de texto
            int pacienteId = Integer.parseInt(cxId.getText());

            // 2. Pede as novas restrições ao usuário através de uma caixa de diálogo
            String novasRestricoes = JOptionPane.showInputDialog(
                this, 
                "Digite as novas restrições para o paciente com ID: " + pacienteId, 
                "Alterar Restrições", 
                JOptionPane.PLAIN_MESSAGE
            );

            // 3. Se o usuário digitou algo e não clicou em "Cancelar"
            if (novasRestricoes != null && !novasRestricoes.trim().isEmpty()) {

                // 4. Chama o DAO para fazer a atualização
                PacienteDAO pacienteDAO = new PacienteDAO();
                boolean sucesso = pacienteDAO.atualizarRestricoes(pacienteId, novasRestricoes);

                // 5. Informa o resultado
                if (sucesso) {
                    JOptionPane.showMessageDialog(this, "Restrições alteradas com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Paciente não encontrado ou não possui doença associada.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, digite um ID válido.", "ERRO DE ENTRADA", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro: " + e.getMessage(), "ERRO GERAL", JOptionPane.ERROR_MESSAGE);
        }

        limpar();
    }    
    
    public void limpar(){
        cxId.setText("");
        cxId.requestFocus();
    }
    
    
    public void sair(){
		int resp = JOptionPane.showConfirmDialog(
					null,
					"Deseja realmente sair?",
					"Saida",
					JOptionPane.YES_NO_OPTION
				);
			if(resp == 0){
				System.exit(0);	
			}
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IntPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IntPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IntPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IntPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IntPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar bmPac;
    private javax.swing.JButton btAltPac;
    private javax.swing.JButton btConsPac;
    private javax.swing.JButton btDelPac;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btnAtualizarTabela;
    private javax.swing.JButton btnCadPac;
    private javax.swing.JTextField cxId;
    private javax.swing.JMenuItem mnCadPac;
    private javax.swing.JMenu mnPac;
    private javax.swing.JLabel rotId;
    private javax.swing.JLabel rotMenuPac;
    // End of variables declaration//GEN-END:variables
}
