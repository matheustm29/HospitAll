

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import View.ImpMed;
import View.CadMed;
import Model.Medico;
import Model.MedicoDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

public class IntMedico extends javax.swing.JFrame {
    private static IntMedico intMedUnic;
    
   
    public IntMedico() {
        initComponents();
    }

    public static IntMedico getIntMedico(){
        if(intMedUnic == null){
            intMedUnic = new IntMedico();
        }
        return intMedUnic;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rotMenuMed = new javax.swing.JLabel();
        rotCrm = new javax.swing.JLabel();
        cxCrm = new javax.swing.JTextField();
        btConsMed = new javax.swing.JButton();
        btAltMed = new javax.swing.JButton();
        btDelMed = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btImpMed = new javax.swing.JButton();
        btCadMed = new javax.swing.JButton();
        bmMed = new javax.swing.JMenuBar();
        mnMed = new javax.swing.JMenu();
        mnItCadMed = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        rotMenuMed.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        rotMenuMed.setText("MENU MEDICO");

        rotCrm.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        rotCrm.setText("CRM:");

        btConsMed.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btConsMed.setText("CONSULTAR MEDICO");
        btConsMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsMedActionPerformed(evt);
            }
        });

        btAltMed.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btAltMed.setText("ALTERAR SALARIO");
        btAltMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAltMedActionPerformed(evt);
            }
        });

        btDelMed.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btDelMed.setText("DELETAR MEDICO");
        btDelMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDelMedActionPerformed(evt);
            }
        });

        btSair.setText("SAIR");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btImpMed.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btImpMed.setText("APRESENTAR MEDICOS");
        btImpMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImpMedActionPerformed(evt);
            }
        });

        btCadMed.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btCadMed.setText("CADASTRAR MEDICO");
        btCadMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadMedActionPerformed(evt);
            }
        });

        mnMed.setText("Medico");

        mnItCadMed.setText("CADASTRAR MEDICO");
        mnItCadMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnItCadMedActionPerformed(evt);
            }
        });
        mnMed.add(mnItCadMed);

        bmMed.add(mnMed);

        setJMenuBar(bmMed);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSair))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btConsMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btImpMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btAltMed, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(btDelMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rotMenuMed)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rotCrm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cxCrm)
                            .addComponent(btCadMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(117, 117, 117))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rotMenuMed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cxCrm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rotCrm))
                .addGap(32, 32, 32)
                .addComponent(btCadMed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btConsMed)
                    .addComponent(btAltMed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btImpMed)
                    .addComponent(btDelMed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(btSair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btConsMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsMedActionPerformed
        consMed();
        limpar();
    }//GEN-LAST:event_btConsMedActionPerformed

    private void btAltMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAltMedActionPerformed
        altMed();
        limpar();
    }//GEN-LAST:event_btAltMedActionPerformed

    private void btDelMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDelMedActionPerformed
        delMed();
        limpar();
    }//GEN-LAST:event_btDelMedActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed

    private void mnItCadMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnItCadMedActionPerformed
        
    }//GEN-LAST:event_mnItCadMedActionPerformed

    private void btImpMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImpMedActionPerformed
        ImpMed telaDeListagem = ImpMed.getImpMed();
        telaDeListagem.setVisible(true);
        telaDeListagem.listarTab(); 
    }//GEN-LAST:event_btImpMedActionPerformed

    private void btCadMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadMedActionPerformed
        CadMed.getCadMed().setVisible(true);
    }//GEN-LAST:event_btCadMedActionPerformed

    
    
    public void delMed(){
        try {
            int crm = Integer.parseInt(cxCrm.getText().trim());
            MedicoDAO medicoDAO = new MedicoDAO();


            int resposta = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja deletar o médico com CRM " + crm + "?", "Confirmação", JOptionPane.YES_NO_OPTION);

            if (resposta == JOptionPane.YES_OPTION) {
                boolean sucesso = medicoDAO.deleteByCrm(crm);

                if (sucesso) {
                    JOptionPane.showMessageDialog(this, "Médico deletado com sucesso.");
                } else {
                    JOptionPane.showMessageDialog(this, "Médico com CRM " + crm + " não encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O CRM deve ser um número válido.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao deletar médico: " + e.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }  
    

    public void consMed() {
        try {
            int crm = Integer.parseInt(cxCrm.getText()); 
            MedicoDAO medicoDAO = new MedicoDAO();
            Medico medico = medicoDAO.findByCrm(crm);

            if (medico != null) {
                String dados = "Nome: " + medico.getNome() + "\n" +
                               "CPF: " + medico.getCpf() + "\n" +
                               "Especialidade: " + medico.getEspec() + "\n" +
                               "Salário: R$ " + medico.getSalario();
                JOptionPane.showMessageDialog(this, dados, "Dados do Médico", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Médico não encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "CRM deve ser um número.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao consultar: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }


    public void altMed() {
        try {
            int crm = Integer.parseInt(cxCrm.getText());
            String novoSalarioStr = JOptionPane.showInputDialog(this, "Digite o novo salário:");

            if (novoSalarioStr != null) {
                float novoSalario = Float.parseFloat(novoSalarioStr);
                MedicoDAO medicoDAO = new MedicoDAO();
                boolean sucesso = medicoDAO.updateSalario(crm, novoSalario);

                if (sucesso) {
                    JOptionPane.showMessageDialog(this, "Salário atualizado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Médico não encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "CRM e Salário devem ser números.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao alterar salário: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }


    
    public void limpar(){
        cxCrm.setText("");
        cxCrm.requestFocus();
    }
    
    
    public void sair(){
		int resp = JOptionPane.showConfirmDialog(
					null,
					"Deseja realmente sair?",
					"Saida",
					JOptionPane.YES_NO_OPTION
				);
			if(resp == 0){
				this.dispose();	
			}
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IntMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IntMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IntMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IntMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IntMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar bmMed;
    private javax.swing.JButton btAltMed;
    private javax.swing.JButton btCadMed;
    private javax.swing.JButton btConsMed;
    private javax.swing.JButton btDelMed;
    private javax.swing.JButton btImpMed;
    private javax.swing.JButton btSair;
    private javax.swing.JTextField cxCrm;
    private javax.swing.JMenuItem mnItCadMed;
    private javax.swing.JMenu mnMed;
    private javax.swing.JLabel rotCrm;
    private javax.swing.JLabel rotMenuMed;
    // End of variables declaration//GEN-END:variables
}
